"use strict";var repoApp=angular.module("repoApp",["ngRoute","repoControllers","ngSanitize"]);repoApp.factory("repoService",["$http",function(a){var b={async:function(){var b=a.get("../json/repos.json").then(function(a){return a.data});return b}};return b}]),repoApp.config(["$routeProvider","$locationProvider",function(a,b){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/dashboard",{templateUrl:"views/dashboard.html",controller:"DashboardCtrl"}).when("/profile",{templateUrl:"views/profile.html",controller:"ProfileCtrl"}).when("/builds",{templateUrl:"views/builds.html",controller:"BuildsCtrl"}).when("/settings",{templateUrl:"views/settings.html",controller:"SettingsCtrl"}).when("/repo/:id",{templateUrl:"../views/repo.html",controller:"RepoCtrl"}).otherwise({redirectTo:"/404"}),b.html5Mode({enabled:!0,requireBase:!1}).hashPrefix("!")}]),repoApp.filter("startFrom",function(){return function(a,b){return b=+b,a?a.slice(b):void 0}}),repoApp.directive("modal",function(){return{template:'<div class="modal fade"><div class="modal-dialog"><div class="modal-content"><div class="modal-header"><button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button><h4 class="modal-title">{{ title }}</h4></div><div class="modal-body" ng-transclude></div></div></div></div>',restrict:"E",transclude:!0,replace:!0,scope:!0,link:function(a,b,c){var d=$(b);a.title=c.title,a.$watch(c.visible,function(a){a===!0?d.modal("show"):d.modal("hide")}),d.on("shown.bs.modal",function(){a.$apply(function(){a.$parent[c.visible]=!0})}),d.on("hidden.bs.modal",function(){a.$apply(function(){a.$parent[c.visible]=!1})})}}});var repoControllers=angular.module("repoControllers",[]);repoControllers.controller("sidebarCtrl",["$scope",function(a){a.n=4,a.selectedNav="repos",a.navSelected=function(b){a.selectedNav=b}}]),repoControllers.controller("MainCtrl",["repoService","$scope","$sanitize",function(a,b,c){b.accounts=[],a.async().then(function(a){b.repos=a.repos,b.repos.forEach(function(a){-1===b.accounts.indexOf(a.account)&&b.accounts.push(a.account)})}),b.accountFilter="",b.currentPage=1,b.maxItemsPerPage=8,b.repoAccount="",b.form={},b.selectRepoAccount=function(a){b.repoAccount=a},b.numberOfPages=function(){return b.filteredRepos?Math.ceil(b.filteredRepos.length/b.maxItemsPerPage):void 0},b.addRepo=function(a){var c,d=$.extend({},a);b.repos.unshift(d),$("#newRepoModal").modal("hide").on("hidden.bs.modal",function(){b.form.newRepoForm.$setPristine(!0),b.formReset()}),c=$("#page-content-wrapper article:first-child"),c.addClass("new-repo"),setTimeout(function(){c.removeClass("new-repo")},500)},b.showModal=!1,b.toggleModal=function(){b.showModal=!b.showModal},b.newFilter=function(){b.currentPage=1},b.getNumberArray=function(a){return new Array(a)},b.decrementCurrentPage=function(){b.currentPage=b.currentPage>1?b.currentPage-1:1},b.incrementCurrentPage=function(){var a=b.numberOfPages();b.currentPage=b.currentPage<a?b.currentPage+1:a},b.updatePageNumber=function(a){b.currentPage=a+1},b.formReset=function(){b.form.newRepoForm.$setPristine(!0),b.form.account="",b.form.title="",b.form.description="",b.form.isPrivate=!1},b.switchFilter=function(a){b.currentPage=1,b.accountFilter="All accounts"===a?"":a}}]),repoControllers.controller("RepoCtrl",["repoService","$scope","$routeParams",function(a,b,c){var d=b.id=c.id;a.async().then(function(a){b.repos=a.repos,b.item=b.repos[d]})}]),repoControllers.controller("DashboardCtrl",["$scope",function(a){a.title="Dashboard"}]),repoControllers.controller("ProfileCtrl",["$scope",function(a){a.title="Profile"}]),repoControllers.controller("SettingsCtrl",["$scope",function(a){a.title="Settings"}]),repoControllers.controller("BuildsCtrl",["$scope",function(a){a.title="Builds"}]),angular.module("sitesApp").run(["$templateCache",function(a){a.put("views/builds.html","<h2> {{title}} </h2>"),a.put("views/dashboard.html","<h2> {{title}} </h2>"),a.put("views/main.html",'<div class="controls row"> <div class="col-xs-6 left-column"> <div class="dropdown"> <label for="singleSelect"> Filter by: </label> <button class="btn btn-default btn-xs dropdown-toggle" type="button" data-toggle="dropdown">{{accountFilter || "All accounts"}} <span class="caret"></span></button> <ul class="dropdown-menu"> <li><a ng-click="switchFilter(\'All accounts\')">All accounts</a></li> <li ng-repeat="item in accounts"> <a ng-click="switchFilter(item)">{{item}}</a> </li> </ul> </div> </div> <div class="col-xs-6 right-column"> <button id="newRepoButton" class="btn btn-sm btn-blue" data-toggle="modal" ng-click="toggleModal\n()">New repository</button> </div> </div> <section class="articles"> <article ng-repeat="item in filteredRepos = (repos | filter:{account:accountFilter}) | startFrom:(currentPage-1)*maxItemsPerPage | limitTo:maxItemsPerPage track by $index" class="repo"> <a href="/repo/{{item.id}}"><span class="account-and-name">{{item.account}}/<span class="title">{{item.title}}</span> <span ng-show="{{item.isPrivate}}" class="btn-private">private</span> </span> <p>{{item.description}}</p></a> </article> </section> <div id="pager"> <ul class="pagination pagination-sm"> <li> <a ng-click="decrementCurrentPage()"> <span class="glyphicon glyphicon-menu-left"></span> </a> </li> <li ng-repeat="i in getNumberArray(numberOfPages()) track by $index"><a ng-class="{active: currentPage==$index+1}" ng-click="updatePageNumber($index)">{{$index+1}}</a></li> <li> <a ng-click="incrementCurrentPage()"> <span class="glyphicon glyphicon-menu-right"></span></a> </li> </ul> </div> <modal id="newRepoModal" class="modal fade" role="dialog" visible title="New Repository"> <form role="form" name="form.newRepoForm" ng-submit="addRepo(form)"> <div class="form-group"> <label for="account">Account:</label> <select name="accountName" class="form-control" ng-change="selectRepoAccount(item)" ng-model="form.account" required> <option ng-repeat="item in accounts" ng-value="item">{{item}}</option> </select> </div> <div class="form-group"> <label for="title">Title:</label> <input type="text" ng-bind-html="form.title" class="form-control" id="title" placeholder="Title" required> </div> <div class="form-group"> <label for="description">Description:</label> <input type="text" ng-bind-html="form.description" class="form-control" id="description" placeholder="Description"> </div> <div class="form-group"> <label for="description">Private account?</label> &nbsp; <input type="checkbox" ng-model="form.isPrivate" id="isPrivate"> </div> <button type="reset" ng-click="formReset()" class="btn btn-danger">Reset</button> <button type="submit" class="btn btn-default">Submit</button> </form> <br> <!-- <pre>form = {{form | json}} </pre> --> </modal>'),a.put("views/profile.html","<h2> {{title}} </h2>"),a.put("views/repo.html","<h2> {{item.title}} </h2> <p>Account: {{item.account}}</p> <p>Description: {{item.description}}</p> <p>Repository {{id}}</p>"),a.put("views/settings.html","<h2> {{title}} </h2>"),a.put("views/show.html","<p> This is the show view. </p> <p> {{message}} </p>")}]);